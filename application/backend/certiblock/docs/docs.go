// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/countries": {
            "get": {
                "description": "Get all countries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "countries"
                ],
                "summary": "Get all countries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Country"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/countries/{id}": {
            "get": {
                "description": "Get a country by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "countries"
                ],
                "summary": "Get a country by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Country ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.Country"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/qrs/create": {
            "post": {
                "description": "Create a QR code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qrs"
                ],
                "summary": "Create a QR code",
                "parameters": [
                    {
                        "description": "QR data",
                        "name": "qr",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.QRInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/data.QROutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/qrs/verify": {
            "post": {
                "description": "Verify a QR code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qrs"
                ],
                "summary": "Verify a QR code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "QR token",
                        "name": "qr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The file content in base64",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/students": {
            "post": {
                "description": "Register a student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Register a student",
                "parameters": [
                    {
                        "description": "Student data",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.StudentInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/data.StudentOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/students/certificates": {
            "post": {
                "description": "Get all certificates of a student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Get all certificates of a student",
                "parameters": [
                    {
                        "description": "Student data",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.StudentAuth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.CertificateOutput"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/students/certificates/{certUUID}": {
            "post": {
                "description": "Get one certificate of a student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Get one certificate of a student",
                "parameters": [
                    {
                        "description": "Student data",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.StudentAuth"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Certificate UUID",
                        "name": "certUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.CertificateOutputFull"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/students/login": {
            "post": {
                "description": "Login a student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Login a student",
                "parameters": [
                    {
                        "description": "Student data",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.StudentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.StudentOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/universities/certificate-file": {
            "post": {
                "description": "Add a certificate file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "universities"
                ],
                "summary": "Add a certificate file",
                "parameters": [
                    {
                        "description": "Certificate file data",
                        "name": "certificateFile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.CertificateFileUpload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/api/universities/register": {
            "post": {
                "description": "Register a university",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "universities"
                ],
                "summary": "Register a university",
                "parameters": [
                    {
                        "description": "University registration data",
                        "name": "university",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.UniversityInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/data.UniversityOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "data.CertificateFileUpload": {
            "type": "object",
            "properties": {
                "certUUID": {
                    "type": "string"
                },
                "ksEncryptedFile": {
                    "type": "string"
                },
                "studentEncryptedKS1": {
                    "type": "string"
                },
                "studentEncryptedKS2": {
                    "type": "string"
                },
                "universityEncryptedKS1": {
                    "type": "string"
                },
                "universityEncryptedKS2": {
                    "type": "string"
                },
                "universityPrivateKey": {
                    "type": "string"
                }
            }
        },
        "data.CertificateOutput": {
            "type": "object",
            "properties": {
                "certHash": {
                    "type": "string"
                },
                "certUUID": {
                    "type": "string"
                },
                "dateOfIssuing": {
                    "type": "string"
                },
                "studentPublicKey": {
                    "type": "string"
                },
                "universityPublicKey": {
                    "type": "string"
                }
            }
        },
        "data.CertificateOutputFull": {
            "type": "object",
            "properties": {
                "base64File": {
                    "type": "string"
                },
                "certHash": {
                    "type": "string"
                },
                "certUUID": {
                    "type": "string"
                },
                "dateOfIssuing": {
                    "type": "string"
                },
                "studentPublicKey": {
                    "type": "string"
                },
                "universityPublicKey": {
                    "type": "string"
                }
            }
        },
        "data.Country": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "data.QRInput": {
            "type": "object",
            "properties": {
                "certUUID": {
                    "type": "string"
                },
                "studentPrivateKey": {
                    "type": "string"
                }
            }
        },
        "data.QROutput": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "data.StudentAuth": {
            "type": "object",
            "properties": {
                "privateKey": {
                    "type": "string"
                }
            }
        },
        "data.StudentInput": {
            "type": "object",
            "properties": {
                "NIN": {
                    "type": "string"
                },
                "countryID": {
                    "type": "integer"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "data.StudentOutput": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                }
            }
        },
        "data.UniversityInput": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "data.UniversityOutput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
