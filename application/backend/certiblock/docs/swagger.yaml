definitions:
  data.BlockchainCertificateOutput:
    properties:
      certHash:
        type: string
      certUUID:
        type: string
      dateOfIssuing:
        type: string
      studentPK:
        type: string
      studentSignature:
        type: string
      universityPK:
        type: string
      universitySignature:
        type: string
    type: object
  data.CertificateFileOutput:
    properties:
      cert_uuid:
        type: string
      date_of_issue:
        type: string
      is_on_chain:
        type: boolean
      plain_text_file_data:
        type: string
      student_public_key:
        type: string
      student_signature:
        type: string
      university_name:
        type: string
      university_public_key:
        type: string
      university_signature:
        type: string
    type: object
  data.CertificateFileUpload:
    properties:
      certUUID:
        type: string
      dateOfIssue:
        type: string
      encodedFile:
        type: string
      isOnChain:
        type: boolean
      studentPublicKey:
        type: string
      studentSignature:
        type: string
      universityName:
        type: string
      universitySignature:
        type: string
    type: object
  data.CertificateOutput:
    properties:
      certHash:
        type: string
      certUUID:
        type: string
      dateOfIssuing:
        type: string
      studentPublicKey:
        type: string
      universityPublicKey:
        type: string
    type: object
  data.CertificateOutputFull:
    properties:
      base64File:
        type: string
      certHash:
        type: string
      certUUID:
        type: string
      dateOfIssuing:
        type: string
      studentPublicKey:
        type: string
      universityPublicKey:
        type: string
    type: object
  data.Country:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  data.QRInput:
    properties:
      certUUID:
        type: string
      studentPrivateKey:
        type: string
    type: object
  data.QROutput:
    properties:
      content:
        type: string
    type: object
  data.StudentAuth:
    properties:
      publicKey:
        type: string
    type: object
  data.StudentInput:
    properties:
      NIN:
        type: string
      countryID:
        type: integer
      dateOfBirth:
        type: string
      fullName:
        type: string
      password:
        type: string
      privateKey:
        type: string
      publicKey:
        type: string
    type: object
  data.StudentOutput:
    properties:
      fullName:
        type: string
      privateKey:
        type: string
      publicKey:
        type: string
    type: object
  data.University:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  data.UniversityInput:
    properties:
      description:
        type: string
      location:
        type: string
      name:
        type: string
      password:
        type: string
      privateKey:
        type: string
      publicKey:
        type: string
    type: object
  data.UniversityOutput:
    properties:
      name:
        type: string
      privateKey:
        type: string
      publicKey:
        type: string
    type: object
  gin.H:
    additionalProperties: {}
    type: object
info:
  contact: {}
paths:
  /api/blockchain/all-objects:
    get:
      description: Get all blockchain
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all blockchain
      tags:
      - blockchain
  /api/countries:
    get:
      description: Get all countries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/data.Country'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all countries
      tags:
      - countries
  /api/countries/{id}:
    get:
      description: Get a country by ID
      parameters:
      - description: Country ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Country'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a country by ID
      tags:
      - countries
  /api/qrs/create:
    post:
      consumes:
      - application/json
      description: Create a QR code
      parameters:
      - description: QR data
        in: body
        name: qr
        required: true
        schema:
          $ref: '#/definitions/data.QRInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/data.QROutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a QR code
      tags:
      - qrs
  /api/qrs/verify:
    post:
      consumes:
      - application/json
      description: Verify a QR code
      parameters:
      - description: QR token
        in: path
        name: qr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The file content in base64
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Verify a QR code
      tags:
      - qrs
  /api/students:
    post:
      consumes:
      - application/json
      description: Register a student
      parameters:
      - description: Student data
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/data.StudentInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/data.StudentOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Register a student
      tags:
      - students
  /api/students/certificates:
    post:
      consumes:
      - application/json
      description: Get all certificates of a student
      parameters:
      - description: Student data
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/data.StudentAuth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/data.CertificateOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all certificates of a student
      tags:
      - students
  /api/students/certificates/{certUUID}:
    post:
      consumes:
      - application/json
      description: Get one certificate of a student
      parameters:
      - description: Student data
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/data.StudentAuth'
      - description: Certificate UUID
        in: path
        name: certUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.CertificateOutputFull'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get one certificate of a student
      tags:
      - students
  /api/students/login:
    post:
      consumes:
      - application/json
      description: Login a student
      parameters:
      - description: Student data
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/data.StudentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.StudentOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Login a student
      tags:
      - students
  /api/universities:
    get:
      description: Get all universities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/data.University'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all universities
      tags:
      - universities
  /api/universities/{id}:
    get:
      description: Retrieve a university by its unique ID
      parameters:
      - description: University ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.University'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a university by ID
      tags:
      - universities
  /api/universities/certificate-file/approve:
    post:
      consumes:
      - application/json
      description: Duyệt một chứng chỉ và đưa lên blockchain
      parameters:
      - description: Thông tin duyệt certificate
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/data.BlockchainCertificateOutput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Duyệt certificate lên blockchain
      tags:
      - Certificates
  /api/universities/certificate-file/request:
    post:
      consumes:
      - application/json
      description: Student issue a certificate file
      parameters:
      - description: Certificate file data
        in: body
        name: certificateFile
        required: true
        schema:
          $ref: '#/definitions/data.CertificateFileUpload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Student issue a certificate file
      tags:
      - universities
  /api/universities/certificates/not_on_chain:
    get:
      description: Trả về các chứng chỉ chưa được đưa lên blockchain bởi các trường
        đại học
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/data.CertificateFileOutput'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Lấy danh sách certificate chưa được đưa lên blockchain
      tags:
      - Certificates
  /api/universities/certificates/on_chain:
    get:
      description: Trả về các chứng chỉ đã được đưa lên blockchain bởi các trường
        đại học
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/data.CertificateFileOutput'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Lấy danh sách certificate đã được đưa lên blockchain
      tags:
      - Certificates
  /api/universities/register:
    post:
      consumes:
      - application/json
      description: Register a university
      parameters:
      - description: University registration data
        in: body
        name: university
        required: true
        schema:
          $ref: '#/definitions/data.UniversityInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/data.UniversityOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Register a university
      tags:
      - universities
swagger: "2.0"
